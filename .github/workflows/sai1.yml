name: Execute JMeter Script
on:
  push:
    branches:
      - main
      
jobs:
  run_jmeter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Java
        run: |
         sudo apt-get install openjdk-18-jdk -y
         javac -version
 
      - name: Install JMeter
        run: | 
         ls -lrth
         tar zxvf apache-jmeter-5.5.tgz         
         echo "export PATH=$PATH:apache-jmeter-5.5/bin" >> ~/.bashrc
         source ~/.bashrc
         ls -lrth
         
      - name: Generate build number
        uses: onyxmueller/build-tag-number@v1
        with:
         token: ${{secrets.github_token}}        
      - name: Print new build number
        run: echo "Build number is $BUILD_NUMBER"
      # Or, if you're on Windows: echo "Build number is ${env:BUILD_NUMBER}"
      #test 2 for build number
         
#       - name: Generate build number
#         if: always()
#         id: buildnumber
#         uses: einaregilsson/build-number@v3
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
           
#       - name: Print new build number
#         run: echo "Build number is $BUILD_NUMBER"         
      
      - name: Install git
        if: always()
        run: | 
         sudo apt-get update && sudo apt-get install -y git-lfs         
         
      - name: Execute JMeter Script and generate HTML Report
        run: |
         apache-jmeter-5.5/bin/jmeter -v
         apache-jmeter-5.5/bin/jmeter -n -t TSSai.jmx -l results.jtl -e -o report_dashboard.html
         echo $PWD
         ls -lrth
         
         mkdir -p reports/test_results/$BUILD_NUMBER
         mv report_dashboard.html reports/test_results/$BUILD_NUMBER/report_dashboard.html
         cd reports/test_results/$BUILD_NUMBER
         ls -lrth
         
#       - name: List of Screenshot
#         if: always()
#         shell: bash
#         run: |
#           echo "#######################################################################################################"
#           echo $PWD
#           ls -l
#           cd $PWD/JMeter_EI/perf/resources/Screenshots
#           echo $PWD
#           ls -l
#           echo "#######################################################################################################"
#           cd ../../../..
#           echo $PWD
#           ls -l
          
#       - name: Upload Screenshot
#         uses: actions/upload-artifact@v3
#         with:
#           name: Screenshot
#           path: ./JMeter_EI/perf/resources/Screenshots

      - name: Upload Report
        uses: actions/upload-artifact@v3
        with:
          name: jmeter_report
          path: ./reports/test_results/$BUILD_NUMBER/report_dashboard.html
          
#       - name: List files
#         if: always()
#         shell: bash
#         run: |
#           cat jmeter.log
#           echo "###### List of all files and folder #####"
#           echo $PWD
#           ls -l
#           cd perfReport
#           echo $PWD
#           ls -l
#           cd ..
#           echo "#######################################################################################################"
#           echo $PWD
#           ls -l
          
      - name: Deploy report page to GitHub Page
        if: always()
        env:
          WORKFLOW_NAME: ${{ github.workflow }}
          run: echo $PWD
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports/test_results/$BUILD_NUMBER/report_dashboard.html
          
    #  Checkout the gh-pages branch in temporary folder

#       - name: Checkout files from gh pages
#         if: always()
#         uses: actions/checkout@v3
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           ref: gh-pages
#           path: temp-gh-pages/
#           fetch-depth: 0    
